name: "test"
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - "releases/*"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    steps:
      - name: disable auto CRLF
        run: git config --global core.autoCRLF false
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: .node-version
          cache: "npm"
      - run: npm ci
      - run: npm run build
      - run: npm test

  check-permission:
    name: check permission
    runs-on: ubuntu-latest
    outputs:
      permission: ${{ steps.check.outputs.permission }}
    steps:
      - id: check
        uses: shogo82148/actions-check-permissions@b7c32c43a066d5752565f554c15c9ac4d6d63e3b # v1.0.4
      - name: the result
        run: echo ${{ steps.check.outputs.permission }}

  integrated:
    name: integrated test
    runs-on: ubuntu-latest
    needs:
      - check-permission
    if: needs.check-permission.outputs.permission == 'write'
    outputs:
      id: ${{ steps.create_release.outputs.id }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Create Release
        id: create_release
        uses: shogo82148/actions-create-release@4661dc54f7b4b564074e9fbf73884d960de569a3 # v1.7.8
        with:
          tag_name: test-${{ github.run_id }}
          release_name: Test for ${{ github.run_id }}
          prerelease: true
          body: |
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: upload
        uses: ./
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: lib/*.js

      - name: overwrite
        uses: ./
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: lib/*.js
          overwrite: true

  cleanup:
    if: always()
    name: cleanup
    runs-on: ubuntu-latest
    needs:
      - integrated
    steps:
      - name: cleanup
        run: |
          curl -XDELETE -H "Accept: application/vnd.github.v3+json" -H "Authorization: token $GITHUB_TOKEN" \
            "$GITHUB_API_URL/repos/${{ github.repository }}/releases/${{ needs.integrated.outputs.id }}"
          sleep 5 # it takes a moment to delete the release
          curl -XDELETE -H "Accept: application/vnd.github.v3+json" -H "Authorization: token $GITHUB_TOKEN" \
            "$GITHUB_API_URL/repos/${{ github.repository }}/git/refs/tags/test-${{ github.run_id }}"
        if: always()
        env:
          GITHUB_TOKEN: ${{ github.token }}
